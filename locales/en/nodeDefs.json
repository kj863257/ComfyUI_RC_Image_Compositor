{
  "RC_ImageCompositor": {
    "display_name": "RC Image Compositor",
    "inputs": {
      "background": {
        "name": "Background"
      },
      "overlay": {
        "name": "Foreground"
      },
      "x_percent": {
        "name": "X Percentage",
        "tooltip": "Horizontal percentage (0=left, 50=center, 100=right)"
      },
      "y_percent": {
        "name": "Y Percentage",
        "tooltip": "Vertical percentage (0=top, 50=center, 100=bottom)"
      },
      "x_align": {
        "name": "X Alignment",
        "tooltip": "Horizontal alignment:\n- from_left: Calculate offset from left\n- from_right: Calculate offset from right (enables tight right alignment)"
      },
      "y_align": {
        "name": "Y Alignment",
        "tooltip": "Vertical alignment:\n- from_top: Calculate offset from top\n- from_bottom: Calculate offset from bottom (enables tight bottom alignment)"
      },
      "x_offset": {
        "name": "X Offset",
        "tooltip": "Horizontal offset pixels, can be negative (use with alignment)"
      },
      "y_offset": {
        "name": "Y Offset",
        "tooltip": "Vertical offset pixels, can be negative (use with alignment)"
      },
      "scale_mode": {
        "name": "Scale Mode",
        "tooltip": "Scaling mode:\n- relative_to_overlay: scale by overlay's size\n- relative_to_background_width: width = scale × bg width\n- relative_to_background_height: height = scale × bg height"
      },
      "scale": {
        "name": "Scale",
        "tooltip": "Scale factor, reference depends on 'scale_mode'"
      },
      "rotation": {
        "name": "Rotation",
        "tooltip": "Rotation angle in degrees"
      },
      "opacity": {
        "name": "Opacity",
        "tooltip": "Opacity (0=transparent, 1=opaque)"
      },
      "blend_mode": {
        "name": "Blend Mode",
        "tooltip": "Complete Photoshop Blend Modes:\nnormal: Normal - Direct overlay\ndarken: Darken - Select darker pixels\nmultiply: Multiply - Colors multiply to darken\ncolor_burn: Color Burn - Darken with increased contrast\nlinear_burn: Linear Burn - Linear darkening\nlighten: Lighten - Select brighter pixels\nscreen: Screen - Inverse multiply to lighten\ncolor_dodge: Color Dodge - Lighten with reduced contrast\nlinear_dodge: Linear Dodge - Direct addition to lighten\noverlay: Overlay - Combines multiply and screen\nsoft_light: Soft Light - Gentle contrast enhancement\nhard_light: Hard Light - Strong contrast enhancement\nvivid_light: Vivid Light - Extreme contrast effect\nlinear_light: Linear Light - Linear contrast adjustment\npin_light: Pin Light - Replace colors based on brightness\nhard_mix: Hard Mix - Creates solid color results\ndifference: Difference - Absolute difference of colors\nexclusion: Exclusion - Softer difference effect\nsubtract: Subtract - Direct color subtraction\ndivide: Divide - Color division operation\nhue: Hue - Change only hue, keep saturation & lightness\nsaturation: Saturation - Change only saturation\ncolor: Color - Change hue & saturation, keep lightness\nluminosity: Luminosity - Change only lightness"
      },
      "flip_h": {
        "name": "Flip Horizontal",
        "tooltip": "Flip horizontally"
      },
      "flip_v": {
        "name": "Flip Vertical",
        "tooltip": "Flip vertically"
      },
      "blend_if_data": {
        "name": "Blend Color Band",
        "tooltip": "Photoshop-style Blend Color Band settings. Controls which pixels blend based on color values:\n- Channel: Gray/Red/Green/Blue channel to analyze\n- This Layer: Controls foreground layer visibility by color range\n- Underlying Layer: Controls background layer blending by color range\n- Range sliders: Black (shadows) and White (highlights) ranges\n- Split ranges: Alt+drag sliders for smooth transitions"
      }
    }
  },
  "RC_LoadImageWithAlpha": {
    "display_name": "RC Load Image (Alpha)",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "RGBA_mode": {
        "name": "RGBA Mode",
        "tooltip": "Force RGBA output. If no alpha, add opaque channel."
      }
    }
  },
  "RC_DropShadow": {
    "display_name": "RC Drop Shadow",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "distance": {
        "name": "Distance",
        "tooltip": "Shadow distance in pixels"
      },
      "angle": {
        "name": "Angle",
        "tooltip": "Shadow angle in degrees (135° = bottom-right)"
      },
      "size": {
        "name": "Size",
        "tooltip": "Shadow blur size in pixels"
      },
      "spread": {
        "name": "Spread",
        "tooltip": "Shadow spread (choke) in pixels"
      },
      "opacity": {
        "name": "Opacity",
        "tooltip": "Shadow opacity"
      },
      "fill_opacity": {
        "name": "Fill Opacity",
        "tooltip": "Original image fill opacity:\n- 1.0: Normal image display\n- 0.0: Hollow effect, shadow only\n- 0.5: Semi-transparent image + shadow"
      },
      "color_r": {
        "name": "Red",
        "tooltip": "Shadow color red component (0-255)"
      },
      "color_g": {
        "name": "Green",
        "tooltip": "Shadow color green component (0-255)"
      },
      "color_b": {
        "name": "Blue",
        "tooltip": "Shadow color blue component (0-255)"
      },
      "blend_mode": {
        "name": "Blend Mode",
        "tooltip": "Drop shadow blend mode:\n- normal: Normal blending\n- multiply: Multiply, classic shadow\n- color_burn: Color burn, deep shadow\n- linear_burn: Linear burn, soft shadow\n- darken: Darken, gentle shadow"
      },
      "auto_expand_canvas": {
        "name": "Auto Expand Canvas",
        "tooltip": "Auto expand canvas:\n- True: Auto expand canvas when shadow exceeds bounds\n- False: Shadow is clipped to original canvas size"
      }
    }
  },
  "RC_Stroke": {
    "display_name": "RC Stroke",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "size": {
        "name": "Size",
        "tooltip": "Stroke width in pixels"
      },
      "position": {
        "name": "Position",
        "tooltip": "Stroke position relative to shape"
      },
      "opacity": {
        "name": "Opacity",
        "tooltip": "Stroke opacity"
      },
      "color_r": {
        "name": "Red",
        "tooltip": "Stroke color red component (0-255)"
      },
      "color_g": {
        "name": "Green",
        "tooltip": "Stroke color green component (0-255)"
      },
      "color_b": {
        "name": "Blue",
        "tooltip": "Stroke color blue component (0-255)"
      },
      "blend_mode": {
        "name": "Blend Mode",
        "tooltip": "Stroke blend mode:\n- normal: Normal blending, direct overlay\n- multiply: Multiply, darkens colors\n- screen: Screen, lightens colors\n- overlay: Overlay, enhances contrast\n- color_burn: Color burn, deeper shadows"
      },
      "fill_opacity": {
        "name": "Fill Opacity",
        "tooltip": "Original image fill opacity:\n- 1.0: Normal image display\n- 0.0: Hollow effect, stroke only\n- 0.5: Semi-transparent image + stroke"
      },
      "auto_expand_canvas": {
        "name": "Auto Expand Canvas",
        "tooltip": "Auto expand canvas:\n- True: Auto expand canvas when stroke exceeds bounds\n- False: Stroke is clipped to original canvas size"
      }
    }
  },
  "RC_OuterGlow": {
    "display_name": "RC Outer Glow",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "size": {
        "name": "Size",
        "tooltip": "Glow blur size in pixels"
      },
      "spread": {
        "name": "Spread",
        "tooltip": "Glow spread (choke) in pixels"
      },
      "opacity": {
        "name": "Opacity",
        "tooltip": "Glow opacity"
      },
      "color_r": {
        "name": "Red",
        "tooltip": "Glow color red component (0-255)"
      },
      "color_g": {
        "name": "Green",
        "tooltip": "Glow color green component (0-255)"
      },
      "color_b": {
        "name": "Blue",
        "tooltip": "Glow color blue component (0-255)"
      },
      "blend_mode": {
        "name": "Blend Mode",
        "tooltip": "Outer glow blend mode:\n- normal: Normal blending\n- screen: Screen, classic glow effect\n- color_dodge: Color dodge, intense glow\n- linear_dodge: Linear dodge, soft glow\n- lighten: Lighten, gentle glow"
      },
      "fill_opacity": {
        "name": "Fill Opacity",
        "tooltip": "Original image fill opacity:\n- 1.0: Normal image display\n- 0.0: Hollow effect, glow only\n- 0.5: Semi-transparent image + glow"
      },
      "auto_expand_canvas": {
        "name": "Auto Expand Canvas",
        "tooltip": "Auto expand canvas:\n- True: Auto expand canvas when glow exceeds bounds\n- False: Glow is clipped to original canvas size"
      }
    }
  },
  "RC_ChannelExtractor": {
    "display_name": "RC Channel Extractor",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "channel": {
        "name": "Channel",
        "tooltip": "Channel to extract:\n- red: Red channel\n- green: Green channel (often best for green screen)\n- blue: Blue channel\n- alpha: Alpha channel (if available)\n- luminance: Luminance (0.299*R + 0.587*G + 0.114*B)"
      },
      "invert": {
        "name": "Invert",
        "tooltip": "Invert the extracted channel"
      }
    }
  },
  "RC_MaskApply": {
    "display_name": "RC Mask Apply",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "mask": {
        "name": "Mask"
      },
      "mask_mode": {
        "name": "Mask Mode",
        "tooltip": "Mask application mode:\n- alpha: Use mask as alpha channel\n- multiply: Multiply image by mask (darken)"
      },
      "threshold": {
        "name": "Threshold",
        "tooltip": "Threshold for mask (values below this become transparent)"
      },
      "feather": {
        "name": "Feather",
        "tooltip": "Feather/smooth the mask edges"
      }
    }
  },
  "RC_GradientGenerator": {
    "display_name": "RC Gradient Generator",
    "inputs": {
      "gradient_data": {
        "name": "Gradient Data",
        "tooltip": "Gradient color stops data (JSON format)"
      },
      "gradient_type": {
        "name": "Gradient Type",
        "tooltip": "Gradient type:\n- linear: Linear gradient\n- radial: Radial gradient from center\n- angular: Angular/conical gradient\n- reflected: Reflected linear gradient"
      },
      "angle": {
        "name": "Angle",
        "tooltip": "Gradient angle in degrees (for linear and reflected types)"
      },
      "size_mode": {
        "name": "Size Mode",
        "tooltip": "Size mode:\n- from_image: Use reference image size\n- custom: Specify custom width and height"
      },
      "width": {
        "name": "Width",
        "tooltip": "Width in pixels (used in custom mode)"
      },
      "height": {
        "name": "Height",
        "tooltip": "Height in pixels (used in custom mode)"
      },
      "center_x": {
        "name": "Center X",
        "tooltip": "Horizontal center position (0-1, for radial and angular)"
      },
      "center_y": {
        "name": "Center Y",
        "tooltip": "Vertical center position (0-1, for radial and angular)"
      },
      "scale": {
        "name": "Scale",
        "tooltip": "Gradient scale/zoom factor"
      },
      "reference_image": {
        "name": "Reference Image",
        "tooltip": "Reference image for size (used when size_mode is from_image)"
      }
    }
  },
  "RC_PatternTiling": {
    "display_name": "RC Pattern Tiling",
    "inputs": {
      "pattern_image": {
        "name": "Pattern Image",
        "tooltip": "Source pattern image (RGBA recommended)"
      },
      "size_mode": {
        "name": "Size Mode",
        "tooltip": "Output size mode:\n- from_image: Use reference image dimensions\n- custom: Specify custom width and height"
      },
      "width": {
        "name": "Width",
        "tooltip": "Output width in pixels (used when size_mode is custom)"
      },
      "height": {
        "name": "Height",
        "tooltip": "Output height in pixels (used when size_mode is custom)"
      },
      "pattern_scale": {
        "name": "Pattern Scale",
        "tooltip": "Scale factor applied to the pattern tile before tiling"
      },
      "rotation": {
        "name": "Rotation",
        "tooltip": "Rotation angle applied to the pattern tile (degrees)"
      },
      "spacing_x": {
        "name": "Spacing X",
        "tooltip": "Horizontal spacing between tiles in pixels (negative values create overlapping tiles with alpha compositing)"
      },
      "spacing_y": {
        "name": "Spacing Y",
        "tooltip": "Vertical spacing between tiles in pixels (negative values create overlapping tiles with alpha compositing)"
      },
      "offset_x": {
        "name": "Offset X",
        "tooltip": "Horizontal offset applied before tiling (positive shifts pattern right)"
      },
      "offset_y": {
        "name": "Offset Y",
        "tooltip": "Vertical offset applied before tiling (positive shifts pattern down)"
      },
      "opacity": {
        "name": "Opacity",
        "tooltip": "Global opacity multiplier applied to the tile alpha channel"
      },
      "crop_top": {
        "name": "Crop Top",
        "tooltip": "Pixels to trim from the top edge of the pattern before tiling"
      },
      "crop_right": {
        "name": "Crop Right",
        "tooltip": "Pixels to trim from the right edge of the pattern before tiling"
      },
      "crop_bottom": {
        "name": "Crop Bottom",
        "tooltip": "Pixels to trim from the bottom edge of the pattern before tiling"
      },
      "crop_left": {
        "name": "Crop Left",
        "tooltip": "Pixels to trim from the left edge of the pattern before tiling"
      },
      "reference_image": {
        "name": "Reference Image",
        "tooltip": "Reference image used for sizing when size_mode is from_image"
      }
    }
  },
  "RC_GaussianBlur": {
    "display_name": "RC Gaussian Blur",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "radius": {
        "name": "Radius",
        "tooltip": "Blur radius in pixels"
      },
      "method": {
        "name": "Method",
        "tooltip": "Blur algorithm:\n- PIL: Fast, general purpose\n- OpenCV: Precise, professional grade"
      },
      "preserve_alpha": {
        "name": "Preserve Alpha",
        "tooltip": "Preserve alpha channel without blurring"
      }
    }
  },
  "RC_Sharpen": {
    "display_name": "RC Sharpen",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "strength": {
        "name": "Strength",
        "tooltip": "Sharpening strength (1.0 = normal, >1.0 = sharper)"
      },
      "method": {
        "name": "Method",
        "tooltip": "Sharpening method:\n- unsharp_mask: Classic unsharp masking\n- high_pass: High-pass filter sharpening\n- edge_enhance: Edge enhancement sharpening"
      },
      "radius": {
        "name": "Radius",
        "tooltip": "Sharpening radius (for unsharp mask)"
      },
      "threshold": {
        "name": "Threshold",
        "tooltip": "Sharpening threshold (avoid noise amplification)"
      }
    }
  },
  "RC_HueSaturation": {
    "display_name": "RC Hue/Saturation",
    "presets": {
      "Cyanotype": "Blue-tinted vintage photography effect",
      "Old Style": "Warm vintage color grading",
      "Red Boost": "Enhanced red channel saturation",
      "Increase Saturation": "Moderate saturation boost",
      "Increase Saturation More": "Strong saturation enhancement",
      "Sepia": "Classic sepia tone effect",
      "Desaturate": "Reduced color saturation",
      "Vibrance": "Enhanced color vibrancy"
    },
    "inputs": {
      "image": {
        "name": "Image"
      },
      "preset": {
        "name": "Preset",
        "tooltip": "Hue/Saturation presets"
      },
      "hue_shift": {
        "name": "Hue Shift",
        "tooltip": "Hue shift in degrees (-180 to +180)"
      },
      "saturation": {
        "name": "Saturation",
        "tooltip": "Saturation adjustment (-100 = grayscale, +100 = double)"
      },
      "lightness": {
        "name": "Lightness",
        "tooltip": "Lightness adjustment (-100 = black, +100 = white)"
      },
      "colorize": {
        "name": "Colorize",
        "tooltip": "Colorize mode (convert to monochromatic)"
      },
      "colorize_hue": {
        "name": "Colorize Hue",
        "tooltip": "Colorize hue (only in colorize mode)"
      },
      "colorize_saturation": {
        "name": "Colorize Saturation",
        "tooltip": "Colorize saturation (only in colorize mode)"
      },
      "target_color": {
        "name": "Target Color",
        "tooltip": "Target color range:\n- master: All colors\n- reds: Red range\n- yellows: Yellow range\n- greens: Green range\n- cyans: Cyan range\n- blues: Blue range\n- magentas: Magenta range"
      }
    }
  },
  "RC_CanvasPadding": {
    "display_name": "RC Canvas Padding",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "top": {
        "name": "Top Padding",
        "tooltip": "Top padding in pixels"
      },
      "bottom": {
        "name": "Bottom Padding",
        "tooltip": "Bottom padding in pixels"
      },
      "left": {
        "name": "Left Padding",
        "tooltip": "Left padding in pixels"
      },
      "right": {
        "name": "Right Padding",
        "tooltip": "Right padding in pixels"
      },
      "fill_mode": {
        "name": "Fill Mode",
        "tooltip": "Fill mode:\n- color: Fill with solid color\n- edge: Extend edge pixels\n- mirror: Mirror edge content\n- transparent: Transparent fill (RGBA only)"
      },
      "fill_color_r": {
        "name": "Fill Color R",
        "tooltip": "Fill color red component"
      },
      "fill_color_g": {
        "name": "Fill Color G",
        "tooltip": "Fill color green component"
      },
      "fill_color_b": {
        "name": "Fill Color B",
        "tooltip": "Fill color blue component"
      }
    }
  },
  "RC_ImageScale": {
    "display_name": "RC Image Scale",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "scale_method": {
        "name": "Scale Method",
        "tooltip": "Scale method:\n- percentage: Scale by percentage\n- dimensions: Exact dimensions\n- fit_width: Fit to width (keep ratio)\n- fit_height: Fit to height (keep ratio)\n- fit_longest: Fit to longest side (keep ratio)\n- fit_shortest: Fit to shortest side (keep ratio)"
      },
      "scale_factor": {
        "name": "Scale Factor",
        "tooltip": "Scale factor (for percentage mode)"
      },
      "width": {
        "name": "Width",
        "tooltip": "Target width (for dimensions/fit modes)"
      },
      "height": {
        "name": "Height",
        "tooltip": "Target height (for dimensions/fit modes)"
      },
      "resampling": {
        "name": "Resampling",
        "tooltip": "Resampling algorithm:\n- LANCZOS: Highest quality (slow)\n- BICUBIC: High quality\n- BILINEAR: Medium quality\n- NEAREST: Fastest (low quality)"
      },
      "keep_aspect_ratio": {
        "name": "Keep Aspect Ratio",
        "tooltip": "Keep aspect ratio (for dimensions mode)"
      }
    }
  },
  "RC_ImageCrop": {
    "display_name": "RC Image Crop",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "crop_method": {
        "name": "Crop Method",
        "tooltip": "Crop method:\n- manual: Manual coordinates\n- center: Center crop to size\n- aspect_ratio: Crop by ratio (centered)"
      },
      "x": {
        "name": "X",
        "tooltip": "Crop start X coordinate (manual mode)"
      },
      "y": {
        "name": "Y",
        "tooltip": "Crop start Y coordinate (manual mode)"
      },
      "width": {
        "name": "Width",
        "tooltip": "Crop width"
      },
      "height": {
        "name": "Height",
        "tooltip": "Crop height"
      },
      "aspect_width": {
        "name": "Aspect Width",
        "tooltip": "Width part of aspect ratio (ratio mode)"
      },
      "aspect_height": {
        "name": "Aspect Height",
        "tooltip": "Height part of aspect ratio (ratio mode)"
      }
    }
  },
  "RC_CanvasResize": {
    "display_name": "RC Canvas Resize",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "new_width": {
        "name": "New Width",
        "tooltip": "New canvas width"
      },
      "new_height": {
        "name": "New Height",
        "tooltip": "New canvas height"
      },
      "anchor": {
        "name": "Anchor",
        "tooltip": "Image anchor position in new canvas:\n- center: Center\n- top_left: Top-left corner\n- top_center: Top center\n- top_right: Top-right corner\n- middle_left: Middle left\n- middle_right: Middle right\n- bottom_left: Bottom-left corner\n- bottom_center: Bottom center\n- bottom_right: Bottom-right corner"
      },
      "x_offset": {
        "name": "X Offset",
        "tooltip": "Additional X offset (pixels)"
      },
      "y_offset": {
        "name": "Y Offset",
        "tooltip": "Additional Y offset (pixels)"
      },
      "background_color_r": {
        "name": "Background Color R",
        "tooltip": "Background color red component"
      },
      "background_color_g": {
        "name": "Background Color G",
        "tooltip": "Background color green component"
      },
      "background_color_b": {
        "name": "Background Color B",
        "tooltip": "Background color blue component"
      }
    }
  },
  "RC_SaveImageNoMetadata": {
    "display_name": "RC Save Image (No Metadata)",
    "inputs": {
      "images": {
        "name": "Images",
        "tooltip": "Image batch to save without embedding any prompt or PNG metadata."
      },
      "filename_prefix": {
        "name": "Filename Prefix",
        "tooltip": "Prefix used when naming the saved files. Supports the same formatting tokens as the standard Save Image node."
      }
    }
  },
  "RC_PreviewImageNoMetadata": {
    "display_name": "RC Preview Image (No Metadata)",
    "description": "Generate temporary preview images that strip prompt and PNG metadata before saving, and output the images for further processing",
    "inputs": {
      "images": {
        "name": "Images",
        "tooltip": "Input images to preview and pass through to next nodes"
      }
    },
    "outputs": {
      "IMAGE": {
        "name": "Images",
        "tooltip": "Output images for further processing in the workflow"
      }
    }
  },
  "RC_PreviewImageWithMetadata": {
    "display_name": "RC Preview Image (Transfer Metadata)",
    "description": "Transfer workflow metadata from source image file to target image and generate preview",
    "inputs": {
      "target_image": {
        "name": "Target Image",
        "tooltip": "Target image that will receive the transferred metadata and be previewed"
      },
      "source_image_file": {
        "name": "Source Image File",
        "tooltip": "Source image file (from input folder) containing workflow metadata to extract and transfer"
      }
    }
  },
  "RC_SaveImageWithMetadata": {
    "display_name": "RC Save Image (Transfer Metadata)",
    "description": "Transfer workflow metadata from source image file to target image and save to disk with full ComfyUI workflow information",
    "inputs": {
      "target_image": {
        "name": "Target Image",
        "tooltip": "Target image to save with transferred workflow metadata"
      },
      "source_image_file": {
        "name": "Source Image File",
        "tooltip": "Source image file (from input folder) containing workflow metadata to extract and transfer"
      },
      "filename_prefix": {
        "name": "Filename Prefix",
        "tooltip": "Prefix for saved image files (supports same formatting tokens as standard Save Image node)"
      }
    }
  },
  "RC_OpacityAdjust": {
    "display_name": "RC Opacity Adjust",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "opacity": {
        "name": "Opacity",
        "tooltip": "Opacity value (0.0=fully transparent, 1.0=fully opaque)"
      },
      "ensure_alpha": {
        "name": "Ensure Alpha",
        "tooltip": "Ensure alpha channel in output:\n- True: Force RGBA output format\n- False: Keep original format (RGB stays RGB)"
      }
    }
  },
  "RC_CurvesAdjust": {
    "display_name": "RC Curves",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "curve_data": {
        "name": "Curve Data",
        "tooltip": "Serialized curve configuration (JSON). Use the editor widget to add points, drag handles, and apply presets."
      },
      "mix": {
        "name": "Mix",
        "tooltip": "Blend factor: 0.0 keeps the original image, 1.0 applies the full curve adjustment."
      },
      "apply_alpha": {
        "name": "Affect Alpha",
        "tooltip": "Apply the curves to the alpha channel when available."
      }
    }
  },
  "RC_BrightnessContrast": {
    "display_name": "RC Brightness/Contrast",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "brightness": {
        "name": "Brightness",
        "tooltip": "Brightness adjustment (-100 to 100, negative=darker, positive=brighter)"
      },
      "contrast": {
        "name": "Contrast",
        "tooltip": "Contrast adjustment (-100 to 100, negative=less contrast, positive=more contrast)"
      },
      "method": {
        "name": "Method",
        "tooltip": "Adjustment algorithm:\n- PIL: Use PIL library algorithm\n- OpenCV: Use OpenCV algorithm, more precise"
      }
    }
  },
  "RC_ColorBalance": {
    "display_name": "RC Color Balance",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "cyan_red": {
        "name": "Cyan/Red",
        "tooltip": "Cyan-Red balance (negative=cyan, positive=red)"
      },
      "magenta_green": {
        "name": "Magenta/Green",
        "tooltip": "Magenta-Green balance (negative=magenta, positive=green)"
      },
      "yellow_blue": {
        "name": "Yellow/Blue",
        "tooltip": "Yellow-Blue balance (negative=yellow, positive=blue)"
      },
      "tone_range": {
        "name": "Tone Range",
        "tooltip": "Tone range:\n- midtones: Midtones (main adjustment area)\n- shadows: Shadows (dark areas)\n- highlights: Highlights (bright areas)"
      },
      "preserve_luminosity": {
        "name": "Preserve Luminosity",
        "tooltip": "Preserve luminosity:\n- True: Keep image brightness unchanged\n- False: Allow brightness changes"
      }
    }
  },
  "RC_ChannelMixer": {
    "display_name": "RC Channel Mixer",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "preset": {
        "name": "Preset",
        "tooltip": "Channel mixer presets"
      },
      "red_from_red": {
        "name": "Red from Red",
        "tooltip": "Red channel contribution to red output (%)"
      },
      "red_from_green": {
        "name": "Red from Green",
        "tooltip": "Green channel contribution to red output (%)"
      },
      "red_from_blue": {
        "name": "Red from Blue",
        "tooltip": "Blue channel contribution to red output (%)"
      },
      "green_from_red": {
        "name": "Green from Red",
        "tooltip": "Red channel contribution to green output (%)"
      },
      "green_from_green": {
        "name": "Green from Green",
        "tooltip": "Green channel contribution to green output (%)"
      },
      "green_from_blue": {
        "name": "Green from Blue",
        "tooltip": "Blue channel contribution to green output (%)"
      },
      "blue_from_red": {
        "name": "Blue from Red",
        "tooltip": "Red channel contribution to blue output (%)"
      },
      "blue_from_green": {
        "name": "Blue from Green",
        "tooltip": "Green channel contribution to blue output (%)"
      },
      "blue_from_blue": {
        "name": "Blue from Blue",
        "tooltip": "Blue channel contribution to blue output (%)"
      },
      "monochrome": {
        "name": "Monochrome",
        "tooltip": "Monochrome mode:\n- True: Output grayscale image (uses only red channel settings)\n- False: Output color image"
      }
    },
    "presets": {
      "bw_red_filter": "B&W with Red Filter",
      "bw_orange_filter": "B&W with Orange Filter",
      "bw_yellow_filter": "B&W with Yellow Filter",
      "bw_green_filter": "B&W with Green Filter",
      "bw_blue_filter": "B&W with Blue Filter",
      "bw_infrared": "B&W Infrared"
    }
  },
  "RC_LevelsAdjust": {
    "display_name": "RC Levels Adjust",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "preset": {
        "name": "Preset",
        "tooltip": "Levels adjustment presets"
      },
      "input_black": {
        "name": "Input Black",
        "tooltip": "Input black point (0.0-0.9, raising darkens shadows)"
      },
      "input_white": {
        "name": "Input White",
        "tooltip": "Input white point (0.1-1.0, lowering brightens highlights)"
      },
      "gamma": {
        "name": "Gamma",
        "tooltip": "Gamma value (<1.0 brightens midtones, >1.0 darkens midtones)"
      },
      "output_black": {
        "name": "Output Black",
        "tooltip": "Output black point (lifts darkest areas)"
      },
      "output_white": {
        "name": "Output White",
        "tooltip": "Output white point (suppresses brightest areas)"
      },
      "channel": {
        "name": "Channel",
        "tooltip": "Adjustment channel:\n- RGB: Adjust all channels together\n- Red/Green/Blue: Adjust individual color channels"
      }
    },
    "presets": {
      "increase_contrast": "Increase Contrast",
      "lighten": "Lighten",
      "darken": "Darken",
      "high_contrast": "High Contrast"
    }
  },
  "RC_AutoColor": {
    "display_name": "RC Auto Color Correction",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "algorithm": {
        "name": "Algorithm",
        "tooltip": "Auto correction algorithm:\n- enhance_monochromatic: Clip channels identically (Auto Contrast)\n- enhance_per_channel: Clip channels independently (Auto Tone)\n- find_dark_light_colors: Find dark/light colors (Auto Color)\n- enhance_brightness_contrast: Content-aware enhancement"
      },
      "neutralize_midtones": {
        "name": "Neutralize Midtones",
        "tooltip": "Adjust midtones so neutral colors map to target neutral"
      },
      "shadow_clip": {
        "name": "Shadow Clip",
        "tooltip": "Amount of shadow data to discard (%)"
      },
      "highlight_clip": {
        "name": "Highlight Clip",
        "tooltip": "Amount of highlight data to discard (%)"
      },
      "target_shadow_r": {
        "name": "Target Shadow R",
        "tooltip": "Target shadow color red component"
      },
      "target_shadow_g": {
        "name": "Target Shadow G",
        "tooltip": "Target shadow color green component"
      },
      "target_shadow_b": {
        "name": "Target Shadow B",
        "tooltip": "Target shadow color blue component"
      },
      "target_midtone_r": {
        "name": "Target Midtone R",
        "tooltip": "Target midtone color red component"
      },
      "target_midtone_g": {
        "name": "Target Midtone G",
        "tooltip": "Target midtone color green component"
      },
      "target_midtone_b": {
        "name": "Target Midtone B",
        "tooltip": "Target midtone color blue component"
      },
      "target_highlight_r": {
        "name": "Target Highlight R",
        "tooltip": "Target highlight color red component"
      },
      "target_highlight_g": {
        "name": "Target Highlight G",
        "tooltip": "Target highlight color green component"
      },
      "target_highlight_b": {
        "name": "Target Highlight B",
        "tooltip": "Target highlight color blue component"
      }
    }
  },
  "RC_HighLowFrequencySkinSmoothing": {
    "display_name": "RC High/Low Frequency Skin Smoothing",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "low_frequency_radius": {
        "name": "Low Frequency Radius",
        "tooltip": "Low frequency separation radius - determines the size of skin texture features to smooth"
      },
      "high_frequency_strength": {
        "name": "High Frequency Strength",
        "tooltip": "High frequency detail strength (0=maximum smoothing, 1=original detail, >1=enhanced detail)"
      },
      "skin_tone_protection": {
        "name": "Skin Tone Protection",
        "tooltip": "Skin tone protection level (0=affect all areas, 1=only affect detected skin tones)"
      },
      "preserve_fine_details": {
        "name": "Preserve Fine Details",
        "tooltip": "Preserve fine details like eyelashes, eyebrows and hair"
      },
      "edge_protection": {
        "name": "Edge Protection",
        "tooltip": "Edge protection strength (0=no protection, 1=maximum edge preservation)"
      },
      "method": {
        "name": "Method",
        "tooltip": "Smoothing method:\n- frequency_separation: Classic PS frequency separation\n- surface_blur: Surface blur for texture preservation\n- selective_gaussian: Selective Gaussian blur"
      },
      "mask": {
        "name": "Mask",
        "tooltip": "Optional mask to limit smoothing to specific areas (1.0=smooth, 0.0=preserve)"
      }
    }
  },
  "RC_ShineRemoval": {
    "display_name": "RC Shine/Oil Removal",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "shine_detection_threshold": {
        "name": "Shine Detection Threshold",
        "tooltip": "Brightness threshold for detecting shine areas (lower = more sensitive, try 0.5-0.6 for portraits)"
      },
      "shine_removal_strength": {
        "name": "Shine Removal Strength",
        "tooltip": "Overall strength of shine removal effect (0=no effect, 1=maximum removal)"
      },
      "high_frequency_reduction": {
        "name": "High Frequency Reduction",
        "tooltip": "Reduce high frequency detail in shine areas (removes texture glare)"
      },
      "low_frequency_smoothing": {
        "name": "Low Frequency Smoothing",
        "tooltip": "Smooth low frequency layer in shine areas (color/tone correction)"
      },
      "saturation_boost": {
        "name": "Saturation Boost",
        "tooltip": "Restore color saturation lost in shiny areas (1.0=no boost, try 1.5-2.0)"
      },
      "smoothing_radius": {
        "name": "Smoothing Radius",
        "tooltip": "Frequency separation blur radius (larger = smoother transition)"
      },
      "feather_edges": {
        "name": "Feather Edges",
        "tooltip": "Feather the shine mask edges for natural blending (in pixels)"
      },
      "skin_tone_detection": {
        "name": "Skin Tone Detection",
        "tooltip": "Only process detected skin tone areas (turn OFF if no effect, ON for portraits only)"
      },
      "invert_mask": {
        "name": "Invert Mask",
        "tooltip": "Invert protection mask (enabled by default: mask bright=protect, mask dark=process)"
      },
      "protection_mask": {
        "name": "Protection Mask",
        "tooltip": "Protection mask: bright areas (1.0) will be protected from processing, dark areas (0.0) will be processed"
      }
    }
  },
  "RC_GradientMap": {
    "display_name": "RC Gradient Map",
    "inputs": {
      "image": {
        "name": "Image",
        "tooltip": "Input image to apply gradient mapping"
      },
      "gradient_data": {
        "name": "Gradient",
        "tooltip": "Gradient mapping data. Maps image luminosity to gradient colors:\n- Position: Where in the luminosity range (0=black, 1=white)\n- Color: RGB color and alpha for that luminosity level\n- Use gradient editor to create smooth color transitions"
      },
      "blend_mode": {
        "name": "Blend Mode",
        "tooltip": "Blending mode for gradient mapping:\n- normal: Direct replacement\n- multiply: Darken effect\n- screen: Lighten effect\n- overlay: Contrast enhancement\n- soft_light: Gentle lighting\n- hard_light: Strong lighting\n- color_dodge: Bright highlights\n- color_burn: Deep shadows\n- darken/lighten: Selective brightness\n- difference/exclusion: Creative effects\n- hue/saturation/color/luminosity: HSL-based blending"
      },
      "opacity": {
        "name": "Opacity",
        "tooltip": "Opacity of the gradient mapping effect (0.0=no effect, 1.0=full effect)"
      },
      "preserve_luminosity": {
        "name": "Preserve Luminosity",
        "tooltip": "Preserve original image luminosity when mapping colors (maintains original brightness)"
      }
    }
  },
  "RC_Threshold": {
    "display_name": "RC Threshold",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "threshold": {
        "name": "Threshold",
        "tooltip": "Threshold value (0.0-1.0, pixels below this become black, above become white)"
      },
      "method": {
        "name": "Method",
        "tooltip": "Threshold calculation method:\n- luminance: Use perceptual luminance (0.299R + 0.587G + 0.114B)\n- average: Simple RGB average (R + G + B) / 3\n- red/green/blue: Use single color channel"
      },
      "invert": {
        "name": "Invert",
        "tooltip": "Invert the threshold result (black becomes white, white becomes black)"
      }
    }
  },
  "RC_Vibrance": {
    "display_name": "RC Vibrance",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "vibrance": {
        "name": "Vibrance",
        "tooltip": "Vibrance adjustment (-100 to 100, negative=less vibrant, positive=more vibrant)"
      },
      "saturation": {
        "name": "Saturation",
        "tooltip": "Additional saturation adjustment (-100 to 100, applied uniformly to all colors)"
      },
      "protect_skin_tones": {
        "name": "Protect Skin Tones",
        "tooltip": "Protect skin tones:\n- True: Reduce effect on orange/yellow skin tones\n- False: Apply vibrance uniformly to all colors"
      },
      "skin_protection_strength": {
        "name": "Skin Protection Strength",
        "tooltip": "Skin tone protection strength (0.0=no protection, 1.0=maximum protection)"
      }
    }
  },
  "RC_AddNoise": {
    "display_name": "RC Add Noise",
    "inputs": {
      "image": {
        "name": "Image"
      },
      "noise_type": {
        "name": "Noise Type",
        "tooltip": "Noise type:\n- gaussian: Sharp random noise with bell curve distribution\n- gaussian_blur: Smooth Gaussian distributed noise with blur\n- uniform: Evenly distributed random noise\n- salt_pepper: Black and white speckles\n- speckle: Multiplicative noise (like film grain)"
      },
      "amount": {
        "name": "Amount",
        "tooltip": "Noise intensity (0-100, higher values = more noise)"
      },
      "monochromatic": {
        "name": "Monochromatic",
        "tooltip": "Monochromatic noise:\n- True: Same noise pattern for all RGB channels (grayscale noise)\n- False: Independent noise for each color channel (color noise)"
      },
      "preserve_alpha": {
        "name": "Preserve Alpha",
        "tooltip": "Keep original alpha channel unchanged"
      }
    }
  },
  "_categories": {
    "RC/Image": "RC/Image",
    "RC/Adjustments": "RC/Adjustments",
    "RC/Filters": "RC/Filters",
    "RC/Generate": "RC/Generate",
    "RC/Layer Effects": "RC/Layer Effects",
    "RC/Utilities": "RC/Utilities",
    "RC/Channel": "RC/Channel"
  },
  "RC_InteractiveCompositor": {
    "display_name": "RC Interactive Canvas",
    "inputs": {
      "background": {
        "name": "Background",
        "tooltip": "Background image layer (static, fills canvas)"
      },
      "foreground": {
        "name": "Foreground",
        "tooltip": "Foreground image layer (can be moved, scaled, rotated, and erased with eraser tool)"
      },
      "canvas_width": {
        "name": "Canvas Width",
        "tooltip": "Output composition canvas width in pixels"
      },
      "canvas_height": {
        "name": "Canvas Height",
        "tooltip": "Output composition canvas height in pixels"
      },
      "composition_data": {
        "name": "Composition Data",
        "tooltip": "JSON transform data (auto-generated, do not edit manually)"
      },
      "pass_forward": {
        "name": "Pass Forward",
        "tooltip": "Emit the saved composition to downstream nodes when enabled"
      },
      "output_filename": {
        "name": "Output Filename",
        "tooltip": "Filename for saved composition image"
      },
      "auto_continue": {
        "name": "Auto Continue",
        "tooltip": "Automatically continue workflow after saving composition"
      }
    },
    "outputs": {
      "image": {
        "name": "Image",
        "tooltip": "Final composited image (background + foreground)"
      },
      "foreground_mask": {
        "name": "Foreground Mask",
        "tooltip": "Edited foreground mask after eraser tool usage"
      }
    }
  },
  "_messages": {
    "enable_pass_forward": "Please adjust the composition, then enable Pass Forward to continue."
  }
}